# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-05-09T04:16:10+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Any as Any_aliased
from typing import Dict, List, Optional, Union

from pydantic import ConfigDict, EmailStr, Field
from pydantic_v2 import BaseModel


class ACCOMODATIONOPTION(Enum):
    HAVE_ACCOMODATION = 'HAVE_ACCOMODATION'
    INVITED_ACCOMODATION = 'INVITED_ACCOMODATION'
    BOOK_ACCOMODATION = 'BOOK_ACCOMODATION'


class ADDONFLIGHTRESERVE(Enum):
    MAKE_RESERVATION = 'MAKE_RESERVATION'


class ADDONTRAVELINSURANCE(Enum):
    MAKE_INSURANCE = 'MAKE_INSURANCE'


class ADDONTRAVELITINERARY(Enum):
    MAKE_ITINERARY = 'MAKE_ITINERARY'


class FLIGHTTICKETOPTION(Enum):
    HAVE_TICKET = 'HAVE_TICKET'
    TTK_DUMMY_TICKET = 'TTK_DUMMY_TICKET'
    TTK_RESERVE_TICKET = 'TTK_RESERVE_TICKET'


class GENDER(Enum):
    M = 'M'
    F = 'F'
    T = 'T'
    O = 'O'


class INSURANCEOPTION(Enum):
    HAVE_INSURANCE = 'HAVE_INSURANCE'
    BUY_INSURANCE = 'BUY_INSURANCE'
    DO_LATER = 'DO_LATER'


class INSDISC1(Enum):
    YES = 'YES'


class INSDISC2(Enum):
    YES = 'YES'


class ITINERARYOPTION(Enum):
    HAVE_ITINERARY = 'HAVE_ITINERARY'
    CREATE_ITINERARY = 'CREATE_ITINERARY'


class OPTION(Enum):
    YES = 'YES'
    NO = 'NO'


class PASSPORTTYPE(Enum):
    REGULAR = 'REGULAR'
    OFFICIAL = 'OFFICIAL'
    DIPLOMATIC = 'DIPLOMATIC'
    EMERGENCY = 'EMERGENCY'
    COLLECTIVE = 'COLLECTIVE'
    E_PASSPORT = 'E_PASSPORT'


class PREFLOC(Enum):
    Bengaluru = 'Bengaluru'
    Hyderabad = 'Hyderabad'
    Chennai = 'Chennai'


class PREFSLOT(Enum):
    Any = 'Any'
    field_10_12 = '10-12'
    field_12_14 = '12-14'


class SAMEASPASSADDR(Enum):
    SAME_AS_PASS_ADDR = 'SAME_AS_PASS_ADDR'


class SPONSORSHIPCOST(Enum):
    SELF = 'SELF'
    SPONSOR = 'SPONSOR'
    EMPLOYER = 'EMPLOYER'
    GOVT_ORG = 'GOVT_ORG'
    SCHOLARSHIP = 'SCHOLARSHIP'
    OTHER = 'OTHER'


class SUPPORTMEANS(Enum):
    PERSONAL = 'PERSONAL'
    SPONSOR_SUPPORT = 'SPONSOR_SUPPORT'
    EMPLOYER_SUPPORT = 'EMPLOYER_SUPPORT'
    GOVT_SUPPORT = 'GOVT_SUPPORT'
    PREPAID = 'PREPAID'


class VISAMODE(Enum):
    Sticker = 'Sticker'
    Evisa = 'Evisa'
    Online = 'Online'


class VISAPOLICY1(Enum):
    VISA_FEE_NONREFUNDABLE = 'VISA_FEE_NONREFUNDABLE'


class VISAPOLICY2(Enum):
    MULTIPLE_ENTRY_INSURANCE = 'MULTIPLE_ENTRY_INSURANCE'


class VISAPOLICY3(Enum):
    DATA_CONSENT_AND_VIS = 'DATA_CONSENT_AND_VIS'


class VISAPOLICY4(Enum):
    VIS_DATA_RIGHTS = 'VIS_DATA_RIGHTS'


class VISAPOLICY5(Enum):
    DECLARATION_AND_ENTRY_NOTICE = 'DECLARATION_AND_ENTRY_NOTICE'


class VISAPROCESSINGTYPE(Enum):
    Normal = 'Normal'
    Expedite = 'Expedite'


class VISATYPE(Enum):
    Tourist = 'Tourist'
    Business = 'Business'
    Work = 'Work'
    Dependent = 'Dependent'
    Visitor = 'Visitor'
    Student = 'Student'
    Sports = 'Sports'


class RootAdditionalDetailsApplicationDetail(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    option_application_details: Optional[OPTION] = Field(
        'NO',
        description='Enter Are you submitting this Schengen Visa application on behalf of the other person?',
        title='Are you submitting this Schengen Visa application on behalf of the other person?',
    )


class RootAdditionalDetailsContactDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    phone_number: Optional[str] = Field(
        None, description='Enter Phone Number', title='Phone Number'
    )
    email: Optional[EmailStr] = Field(None, description='Enter Email', title='Email')


class RootAdditionalDetailsInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootAdditionalDetailsPersonal(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    minor: Optional[OPTION] = Field(
        'NO', description='Enter Are you a minor?', title='Are you a minor?'
    )
    civil_status: Optional[str] = Field(
        None, description='Enter Civil Status', title='Civil Status'
    )
    national_identity_number: Optional[int] = Field(
        None,
        description='Enter National Identity Number',
        title='National Identity Number',
    )


class RootAdditionalDetailsPersonalDetailsOption(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    option_1: Optional[OPTION] = Field(
        'NO',
        description='Enter Do you have a family member who is an EU, EEA, or CH Citizen or a national of the United Kingdom who is a beneficiary of the agreement between the Swiss Confederation and the United Kingdom?',
        title='Do you have a family member who is an EU, EEA, or CH Citizen or a national of the United Kingdom who is a beneficiary of the agreement between the Swiss Confederation and the United Kingdom?',
    )


class RootAdditionalDetailsSponorshipDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    sponsor_option_1: Optional[SPONSORSHIPCOST] = Field(
        None,
        description='Enter Cost of travelling and living during stay is covered by:',
        title='Cost of travelling and living during stay is covered by:',
    )
    sponsor_option_2: Optional[SUPPORTMEANS] = Field(
        None,
        description='Enter Means of support during travelling and living during stay',
        title='Means of support during travelling and living during stay',
    )


class RootAddonsAddonsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    addon_display: Optional[str] = Field(
        None, description='Addons', title='Display Field'
    )
    addon_1: Optional[ADDONTRAVELITINERARY] = Field(None, title='')
    addon_2: Optional[ADDONTRAVELINSURANCE] = Field(None, title='')
    addon_3: Optional[ADDONFLIGHTRESERVE] = Field(None, title='')
    ref_id_display: Optional[str] = Field(
        None, description='Ref ID', title='Display Field'
    )
    ref_id_1: Optional[str] = Field(
        None, description='Enter Reference ID', title='Reference ID'
    )
    ref_id_2: Optional[str] = Field(
        None, description='Enter Reference ID', title='Reference ID'
    )
    ref_id_3: Optional[str] = Field(
        None, description='Enter Reference ID', title='Reference ID'
    )
    txn_id_display: Optional[str] = Field(
        None, description='Txn ID', title='Display Field'
    )
    txn_id_1: Optional[str] = Field(None, description='Enter Txn ID', title='Txn ID')
    txn_id_2: Optional[str] = Field(None, description='Enter Txn ID', title='Txn ID')
    txn_id_3: Optional[str] = Field(None, description='Enter Txn ID', title='Txn ID')
    date_display: Optional[str] = Field(None, description='Date', title='Display Field')
    date_1: Optional[date] = Field(None, description='Enter Date', title='Date')
    date_2: Optional[date] = Field(None, description='Enter Date', title='Date')
    date_3: Optional[date] = Field(None, description='Enter Date', title='Date')
    amount_display: Optional[str] = Field(
        None, description='Amount', title='Display Field'
    )
    amount_1: Optional[str] = Field(None, description='Enter Amount', title='Amount')
    amount_2: Optional[str] = Field(None, description='Enter Amount', title='Amount')
    amount_3: Optional[str] = Field(None, description='Enter Amount', title='Amount')
    total_amount: Optional[str] = Field(
        None, description='Enter Total Amount', title='Total Amount'
    )


class RootAppointmentAppointmentAvailability(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    preferred_location_1: Optional[PREFLOC] = Field(
        None, description='Enter Available Location 1', title='Available Location 1'
    )
    preferred_location_2: Optional[PREFLOC] = Field(
        None, description='Enter Available Location 2', title='Available Location 2'
    )
    preferred_date_1: Optional[date] = Field(
        None, description='Enter Available Date 1', title='Available Date 1'
    )
    preferred_date_2: Optional[date] = Field(
        None, description='Enter Available Date 2', title='Available Date 2'
    )
    preferred_slot_1: Optional[PREFSLOT] = Field(
        None, description='Enter Available Slot 1', title='Available Slot 1'
    )
    preferred_slot_2: Optional[PREFSLOT] = Field(
        None, description='Enter Available Slot 2', title='Available Slot 2'
    )


class RootAppointmentAppointmentPreference(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    preferred_location_1: Optional[PREFLOC] = Field(
        None, description='Enter Preferred Location 1', title='Preferred Location 1'
    )
    preferred_location_2: Optional[PREFLOC] = Field(
        None, description='Enter Preferred Location', title='Preferred Location'
    )
    preferred_date_1: Optional[date] = Field(
        None, description='Enter Preferred Date 1', title='Preferred Date 1'
    )
    preferred_date_2: Optional[date] = Field(
        None, description='Enter Preferred Date 2', title='Preferred Date 2'
    )
    preferred_slot_1: Optional[PREFSLOT] = Field(
        None, description='Enter Preferred Slot 1', title='Preferred Slot 1'
    )
    preferred_slot_2: Optional[PREFSLOT] = Field(
        None, description='Enter Preferred Slot 2', title='Preferred Slot 2'
    )


class RootAppointmentAppointmentScheduled(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    scheduled_location: Optional[PREFLOC] = Field(
        None, description='Enter Scheduled Location', title='Scheduled Location'
    )
    scheduled_time: Optional[str] = Field(
        None, description='Enter Scheduled Time', title='Scheduled Time'
    )
    scheduled_date: Optional[date] = Field(
        None, description='Enter Scheduled Date', title='Scheduled Date'
    )
    upload_appointment: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Upload Appointment', title='Upload Appointment'
    )


class RootAppointmentInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootAttachmentsInfopaneAttachDocumentsAttachmentgroupAttachment(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    file_title: Optional[str] = Field(
        None, description='Enter File Title', title='File Title'
    )
    file_description: Optional[str] = Field(
        None, description='Enter File Description', title='File Description'
    )
    attached_file: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Nominee ID Proof', title='Nominee ID Proof'
    )


class RootBankStatementAccountDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    bank_acc_num: Optional[str] = Field(
        None, description='Enter Bank Account Number', title='Bank Account Number'
    )
    account_holder_name: Optional[str] = Field(
        None, description='Enter Account Holder Name', title='Account Holder Name'
    )
    ifsc_code: Optional[str] = Field(
        None, description='Enter IFSC Code', title='IFSC Code'
    )
    branch: Optional[str] = Field(None, description='Enter Branch', title='Branch')


class RootDeclarationsVisaDeclaration(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    visa_policy_1: Optional[VISAPOLICY1] = Field(None, title='')
    visa_policy_2: Optional[VISAPOLICY2] = Field(None, title='')
    visa_policy_3: Optional[VISAPOLICY3] = Field(None, title='')
    visa_policy_4: Optional[VISAPOLICY4] = Field(None, title='')
    visa_policy_5: Optional[VISAPOLICY5] = Field(None, title='')


class RootItineraryAccomodationInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootItineraryAccomodationItineraryDetailsItinerarygroupInviterDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    address: Optional[str] = Field(
        None, description='Enter Invited Address', title='Invited Address'
    )
    inviter_details: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload Inviter Details', title='Upload Inviter Details'
    )


class RootItineraryAccomodationItineraryDetailsItinerarygroupItineraryTable(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    country: Optional[str] = Field(None, description='Enter Country', title='Country')
    accomodation_option: Optional[ACCOMODATIONOPTION] = Field(
        'HAVE_ACCOMODATION', title=''
    )
    date_of_arrival: Optional[date] = Field(
        None, description='Enter Date of Arrival', title='Date of Arrival'
    )
    date_of_departure: Optional[date] = Field(
        None, description='Enter Date of Departure', title='Date of Departure'
    )
    locations: Optional[str] = Field(
        None, description='Enter Locations', title='Locations'
    )


class RootItrAcknowledgement(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    itr_details_display: Optional[str] = Field(
        None, description='ITR Details', title='Display Field'
    )
    itr_details: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload ITR Acknowledgment pdf', title='Acknowledgments'
    )


class RootPassportInstructionPassport(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 0px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- Requirements Section -->\n        <div style="margin-top: 30px;">\n\n            <div style="margin-bottom: 20px;">\n                <h3 style="color: #0073cf; margin-top: 0;"></h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Minimum Validity of 6 months from the date of Departure from Swiss.</li>\n                    <li>Hand written passports are not accepted.</li>\n                    <li>The passport should not have any damages – For example: Water marks, torn pages, peeling of Lamination, Spelling mistake in the given name and surname.</li>\n                    <li>The passport should not have any observation in the passport like ECR/ Change inPlace of birth/ Spouse name/ applicant Surname and given name/ Change of address.</li>\n                    <li>Old Passports in Original (If applicable)</li>\n                </ul>\n            </div>\n     \n<!-- \no Minimum Validity of 6 months from the date of Departure from Swiss.\no Hand written passports are not accepted.\no The passport should not have any damages – For example: Water marks, torn\npages, peeling of Lamination, Spelling mistake in the given name and surname.\no The passport should not have any observation in the passport like ECR/ Change in\nPlace of birth/ Spouse name/ applicant Surname and given name/ Change of\naddress.\no Old Passports in Original (If applicable)\n -->\n<!-- \n            <div style="margin-bottom: 20px;">\n                <h3 style="color: #0073cf; margin-top: 0;">The photographs must:</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>show you looking directly at the camera</li>\n                    <li>show your skin tones naturally</li>\n                    <li>have appropriate brightness and contrast</li>\n                    <li>be printed on high quality paper, and at high resolution</li>\n                </ul>\n                <p style="margin-top: 10px;">\n                    Photographs taken with a digital camera must be high quality colour and printed on photo-quality paper.\n                </p>\n            </div> -->\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootPassportPassportAddress(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    address_line_1: Optional[str] = Field(
        None, description='Enter Address Line 1', title='Address Line 1'
    )
    pin_code: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.postal_code',
        description='Enter PIN Code',
        title='PIN Code',
    )
    state: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.state',
        description='Enter State',
        title='State',
    )
    address_line_2: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.address_line_2',
        description='Enter Address Line 2',
        title='Address Line 2',
    )
    city: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.city',
        description='Enter City',
        title='City',
    )
    country: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.code',
        description='Enter Country',
        title='Country',
    )


class RootPassportPassportDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    desired_validity: Optional[str] = Field(
        '6',
        description='This is the minimum duration for which the passport should be valid',
        title='',
    )
    first_name: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.name',
        description='Enter Given Name as in Passport',
        title='Given Name as in Passport',
    )
    date_of_birth: Optional[date] = Field(
        None,
        description='Enter Date of Birth as in Passport',
        title='Date of Birth as in Passport',
    )
    date_of_issue: Optional[date] = Field(
        None, description='Enter Date of Issue', title='Date of Issue'
    )
    gender: Optional[GENDER] = Field(None, description='Enter Gender', title='Gender')
    place_of_issue: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.place_of_issue',
        description='Enter Place of Issue',
        title='Place of Issue',
    )
    nationality: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.nationality',
        description='Enter Nationality',
        title='Nationality',
    )
    issued_by: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.place_of_issue',
        description='Enter Issued By (Authority/City)',
        title='Issued By (Authority/City)',
    )
    surname: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.surname',
        description='Enter Surname as in Passport',
        title='Surname as in Passport',
    )
    passport_number: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.uid',
        description='Enter Passport Number',
        title='Passport Number',
    )
    date_of_expiry: Optional[date] = Field(
        None, description='Enter Date of Expiry', title='Date of Expiry'
    )
    place_of_birth: Optional[str] = Field(
        '@.passport_page_upload.TRUSTED_OVD.place_of_birth',
        description='Enter Place of Birth',
        title='Place of Birth',
    )


class RootPassportPassportPageUpload(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    type_of_passport: Optional[PASSPORTTYPE] = Field(
        None, description='Enter Type of Passport', title='Type of Passport'
    )
    ovd_front: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Front Page of Passport', title='Front Page of Passport'
    )
    ovd_back: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Back Page of Passport', title='Back Page of Passport'
    )


class RootPhotographInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <h2 style="color: #002b7f; text-align: center; margin-top: 0;">Instructions</h2> -->\n        <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n            (From the Government of Switzerland)\n        </p>\n\n        <div style="display: flex; flex-wrap: wrap; justify-content: center; margin-top: 20px;">\n\n            <!-- Photo Boxes -->\n            <div style="margin-bottom: 20px; text-align: center;">\n                <img src="https://d2phdgmkbm5x8b.cloudfront.net/img/schengen-passport-photo-01.webp" alt="Too Close" style="width: 100%; border: 1px solid #ccc; border-radius: 5px;">\n            </div>\n\n        </div>\n\n        <!-- Requirements Section -->\n        <div style="margin-top: 30px;">\n\n            <div style="margin-bottom: 20px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Photograph quality</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>be no more than 6-months old</li>\n                    <li>35–40mm in width</li>\n                    <li>close up of your head and top of your shoulders so that your face takes up 70–80% of the photograph</li>\n                    <li>in sharp focus and clear</li>\n                    <li>of high quality with no ink marks or creases</li>\n                </ul>\n            </div>\n\n            <div style="margin-bottom: 20px;">\n                <h3 style="color: #0073cf; margin-top: 0;">The photographs must:</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>show you looking directly at the camera</li>\n                    <li>show your skin tones naturally</li>\n                    <li>have appropriate brightness and contrast</li>\n                    <li>be printed on high quality paper, and at high resolution</li>\n                </ul>\n                <p style="margin-top: 10px;">\n                    Photographs taken with a digital camera must be high quality colour and printed on photo-quality paper.\n                </p>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootPhotographPassportPhoto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    upload_photo_display: Optional[str] = Field(
        None,
        description='<h2 style="font-family: Arial, sans-serif; font-size: 14px; color: #333;">\n    Upload a passport photo that has been taken not more than 6 months ago & have a clear resemblance to you.\n</h2>\n',
        title='Display Field',
    )
    photo: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Upload Photo', title='Upload Photo'
    )


class RootPreviousVisasInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootPreviousVisasPreviousSchengenVisa(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    option_1: Optional[OPTION] = Field(
        'NO',
        description='Enter Have you been issued a Schengen visa during the past 3 years?',
        title='Have you been issued a Schengen visa during the past 3 years?',
    )
    option_2: Optional[OPTION] = Field(
        'NO',
        description='Enter Have you been issued a Schengen visa in the past?',
        title='Have you been issued a Schengen visa in the past?',
    )
    option_3: Optional[OPTION] = Field(
        'NO',
        description='Enter Have your fingerprints been collected previously while applying for a Schengen Visa?',
        title='Have your fingerprints been collected previously while applying for a Schengen Visa?',
    )


class RootPreviousVisasPreviousVisaUploadsPreviousschengenvisauploadVisaDetails(
    BaseModel
):
    model_config = ConfigDict(
        extra='allow',
    )
    visa_file: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Upload Visa', title='Upload Visa'
    )
    visa_number: Optional[str] = Field(
        None, description='Enter Visa Number', title='Visa Number'
    )
    visa_type: Optional[str] = Field(
        None, description='Enter Visa Type', title='Visa Type'
    )


class RootResidentialAddressInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootResidentialAddressResidentialAddressCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    address_line_1: Optional[str] = Field(
        None, description='Enter Address Line 1', title='Address Line 1'
    )
    pin_code: Optional[int] = Field(
        None, description='Enter PIN Code', title='PIN Code'
    )
    state: Optional[str] = Field(None, description='Enter State', title='State')
    address_line_2: Optional[str] = Field(
        None, description='Enter Address Line 2', title='Address Line 2'
    )
    city: Optional[str] = Field(None, description='Enter City', title='City')
    country: Optional[str] = Field(None, description='Enter Country', title='Country')


class RootTicketingInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootTravelInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%; box-sizing: border-box;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 10px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- <p style="text-align: center; color: #0073cf; font-weight: bold; margin-top: 0;">\n        (Help for Example Section)\n        </p> -->\n        <!-- Requirements Section -->\n        <div style="margin-top: 5px;">\n\n            <!-- <div style="margin-bottom: 10px;">\n                <h3 style="color: #0073cf; margin-top: 0;">Example Title</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                    <li>Help Item</li>\n                </ul>\n            </div> -->\n\n            <div style="margin-bottom: 10px;">\n              <h3 style="color: #0073cf; margin-top: 0;">Example Help Title</h3>\n              <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n                  <li>Help Item</li>\n              </ul>\n              <p style="margin-top: 10px;">\n                Example Description\n            </p>\n          </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootTravelInsuranceInstructions(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_display: Optional[str] = Field(
        None,
        description='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Photo Instructions - Switzerland</title>\n</head>\n<body style="margin: 0; font-family: Arial, sans-serif;">\n\n<!-- Full width wrapper with 10% left and right padding -->\n<div style="width: 100%;">\n\n    <!-- Main card-style container -->\n    <div style="background: white; border-radius: 0px; border: 1px solid #ccc; width: 100%; padding: 20px; box-sizing: border-box;">\n\n        <!-- Requirements Section -->\n        <div style="margin-top: 30px;">\n\n            <div style="margin-bottom: 20px;">\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>Please refer to the list of approved Indian travel insurances: \n                        <a href="https://www.eda.admin.ch/dam/countries/countries-content/india/en/visa/SchengetList-Travel_Insurance_CompaniesEN.pdf" target="_blank">\n                            Approved Travel Insurance List\n                        </a>\n                    </li>\n                    <li>Minimum coverage of 30,000 Euro / 50,000 USD / 50,000 CHF per person</li>\n                    <li>Coverage of all expenses which might arise in connection with repatriation for medical reasons, urgent medical attention and/or emergency hospital treatment</li>\n                    <li>The insurance has to cover the entire stay in Schengen territory</li>\n                    <li>Applicants who wish to apply for a six months or a one year multiple visa are not obliged to provide a 180 (365) days coverage. It is sufficient to submit an insurance policy covering the first journey</li>\n                </ul>\n            </div>\n     \n<!-- \no Minimum Validity of 6 months from the date of Departure from Swiss.\no Hand written passports are not accepted.\no The passport should not have any damages – For example: Water marks, torn\npages, peeling of Lamination, Spelling mistake in the given name and surname.\no The passport should not have any observation in the passport like ECR/ Change in\nPlace of birth/ Spouse name/ applicant Surname and given name/ Change of\naddress.\no Old Passports in Original (If applicable)\n -->\n<!-- \n            <div style="margin-bottom: 20px;">\n                <h3 style="color: #0073cf; margin-top: 0;">The photographs must:</h3>\n                <ul style="line-height: 1.6; padding-left: 20px; margin-top: 10px;">\n                    <li>show you looking directly at the camera</li>\n                    <li>show your skin tones naturally</li>\n                    <li>have appropriate brightness and contrast</li>\n                    <li>be printed on high quality paper, and at high resolution</li>\n                </ul>\n                <p style="margin-top: 10px;">\n                    Photographs taken with a digital camera must be high quality colour and printed on photo-quality paper.\n                </p>\n            </div> -->\n\n        </div>\n\n    </div>\n\n</div>\n\n</body>\n</html>\n',
        title='Display Field',
    )


class RootTravelInsuranceInsuranceDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    name_of_nominee: Optional[str] = Field(
        None, description='Enter Name of Nominee', title='Name of Nominee'
    )
    disclosure_1: Optional[INSDISC1] = Field(None, title='')
    disclosure_2: Optional[INSDISC2] = Field(None, title='')
    nominee_relationship: Optional[int] = Field(
        None, description='Enter Relationship', title='Relationship'
    )
    pre_existing_disease: Optional[OPTION] = Field(
        'NO', description='Select if any disease', title='Any pre-existing Disease?'
    )
    pre_existing_disease_details: Optional[str] = Field(
        None,
        description='Enter Details of Pre-Existing Disease',
        title='Details of Pre-Existing Disease',
    )


class RootTravelTravelDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    from_country: Optional[str] = Field(
        None, description='Enter From Country', title='From Country'
    )
    departure_date: Optional[date] = Field(
        None, description='Enter Departure Date', title='Departure Date'
    )
    validity: Optional[int] = Field(
        None, description='Enter Validity', title='Validity'
    )
    visa_processing_type: Optional[VISAPROCESSINGTYPE] = Field(
        None, description='Enter Visa Processing', title='Visa Processing'
    )
    to_country: Optional[str] = Field(
        None, description='Enter To Country', title='To Country'
    )
    arrival_date: Optional[date] = Field(
        None, description='Enter Arrival Date', title='Arrival Date'
    )
    no_of_entries: Optional[int] = Field(
        None, description='Enter No of Entries', title='No of Entries'
    )
    earliest_appointment_availability: Optional[date] = Field(
        None,
        description='Enter Earliest Appontment Availability',
        title='Earliest Appontment Availability',
    )
    visa_type: Optional[VISATYPE] = Field(
        None, description='Enter Visa Type', title='Visa Type'
    )
    length_of_stay: Optional[int] = Field(
        None, description='Enter Length of Stay', title='Length of Stay'
    )
    visa_mode: Optional[VISAMODE] = Field(
        None, description='Enter Visa Mode', title='Visa Mode'
    )
    maker_id: Optional[str] = Field(
        None, description='Enter Maker name', title='Maker name'
    )
    order_id: Optional[str] = Field(
        None, description='Enter Order ID', title='Order ID'
    )


class RootAdditionalDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootAdditionalDetailsInstructions] = Field(
        None, title='Instructions'
    )
    application_detail: Optional[RootAdditionalDetailsApplicationDetail] = Field(
        None, title='Application Details'
    )
    personal: Optional[RootAdditionalDetailsPersonal] = Field(
        None, title='Personal Details'
    )
    personal_details_option: Optional[
        RootAdditionalDetailsPersonalDetailsOption
    ] = Field(None, title='Family Member of EU, EEA, Swiss, or UK National')
    contact_details: Optional[RootAdditionalDetailsContactDetails] = Field(
        None, title='Contact Details'
    )
    sponorship_details: Optional[RootAdditionalDetailsSponorshipDetails] = Field(
        None, title='Sponsorship Details'
    )


class RootAddons(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    addons_view: Optional[RootAddonsAddonsView] = Field(None, title='Addons List')


class RootAppointment(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootAppointmentInstructions] = Field(
        None, title='Instructions'
    )
    appointment_scheduled: Optional[RootAppointmentAppointmentScheduled] = Field(
        None, title='Appointment Scheduled'
    )
    appointment_preference: Optional[RootAppointmentAppointmentPreference] = Field(
        None, title='Appointment Preference'
    )
    appointment_availability: Optional[RootAppointmentAppointmentAvailability] = Field(
        None, title='Appointment Availability'
    )


class RootAttachmentsInfopaneAttachDocumentsAttachmentgroup(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    attachment: Optional[
        RootAttachmentsInfopaneAttachDocumentsAttachmentgroupAttachment
    ] = Field(None, title='Attach Document')


class RootBankStatement(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    bank_statement_file: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload bank statement pdf', title='Bank Statements'
    )
    account_details: Optional[RootBankStatementAccountDetails] = Field(
        None, title='Account Details'
    )


class RootDeclarations(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    visa_declaration: Optional[RootDeclarationsVisaDeclaration] = Field(
        None, title='Visa Declaration'
    )


class RootItineraryAccomodationItineraryDetailsItinerarygroup(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    itinerary_table: Optional[
        RootItineraryAccomodationItineraryDetailsItinerarygroupItineraryTable
    ] = Field(None, title='Itinerary Details')
    accommodation_document: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload Accommodation Document pdf', title='Accommodation'
    )
    inviter_details: Optional[
        RootItineraryAccomodationItineraryDetailsItinerarygroupInviterDetails
    ] = Field(None, title='Inviter Details')


class RootPassport(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instruction_passport: Optional[RootPassportInstructionPassport] = Field(
        None, title='Original Passport'
    )
    passport_page_upload: Optional[RootPassportPassportPageUpload] = Field(
        None, title='Passport Photo Upload'
    )
    passport_details: Optional[RootPassportPassportDetails] = Field(
        None, title='Passport Details'
    )
    passport_address: Optional[RootPassportPassportAddress] = Field(
        None, title='Address as in Passport'
    )


class RootPhotograph(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootPhotographInstructions] = Field(
        None, title='Instructions'
    )
    passport_photo: Optional[RootPhotographPassportPhoto] = Field(
        None, title='Passport Photo'
    )


class RootPreviousVisasPreviousVisaUploadsPreviousschengenvisaupload(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    visa_details: Optional[
        RootPreviousVisasPreviousVisaUploadsPreviousschengenvisauploadVisaDetails
    ] = Field(None, title='Visa Details')


class RootResidentialAddress(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootResidentialAddressInstructions] = Field(
        None, title='Instructions'
    )
    upload_display_residential_address: Optional[str] = Field(
        None,
        description='<h2 style="font-family: Arial, sans-serif; font-size: 14px; color: #333;">\n    Upload the evidence of your legal residence in the country you are applying from\n</h2>',
        title='Display Field',
    )
    same_as_passport_address: Optional[SAMEASPASSADDR] = Field(None, title='')
    residential_address_card: Optional[
        RootResidentialAddressResidentialAddressCard
    ] = Field(None, title='Current Residential Address')


class RootTicketing(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootTicketingInstructions] = Field(
        None, title='Instructions'
    )
    flight_ticket_option: Optional[FLIGHTTICKETOPTION] = Field('HAVE_TICKET', title='')
    upload_ticket: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Upload Ticket', title='Upload Ticket'
    )


class RootTravel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootTravelInstructions] = Field(None, title='Instructions')
    travel_details: Optional[RootTravelTravelDetails] = Field(
        None, title='Travel Details'
    )


class RootTravelInsurance(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootTravelInsuranceInstructions] = Field(
        None, title='Travel Insurance'
    )
    insurance_options: Optional[INSURANCEOPTION] = Field('HAVE_INSURANCE', title='')
    insurance_document: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload insurance document pdf', title='Insurance Document'
    )
    insurance_details: Optional[RootTravelInsuranceInsuranceDetails] = Field(
        None, title='Insurance Details'
    )


class FieldGrpRootAttachmentsInfopaneAttachDocuments(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    attachmentgroup: Optional[
        RootAttachmentsInfopaneAttachDocumentsAttachmentgroup
    ] = Field(None, title='Nominee')


class FieldGrpRootItineraryAccomodationItineraryDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    itinerarygroup: Optional[
        RootItineraryAccomodationItineraryDetailsItinerarygroup
    ] = Field(None, title='Itinerary')


class FieldGrpRootPreviousVisasPreviousVisaUploads(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    previousschengenvisaupload: Optional[
        RootPreviousVisasPreviousVisaUploadsPreviousschengenvisaupload
    ] = Field(None, title='Info Pane Builder')


class RootAttachmentsInfopane(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    attach_documents: Optional[
        List[FieldGrpRootAttachmentsInfopaneAttachDocuments]
    ] = Field(None, title='Attached Documents')


class RootItineraryAccomodation(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootItineraryAccomodationInstructions] = Field(
        None, title='Instructions'
    )
    itinerary_option: Optional[ITINERARYOPTION] = Field('HAVE_ITINERARY', title='')
    upload_itinerary: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Enter Upload Itinerary', title='Upload Itinerary'
    )
    itinerary_details: Optional[
        List[FieldGrpRootItineraryAccomodationItineraryDetails]
    ] = Field(None, title='Itinerary')


class RootPreviousVisas(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    instructions: Optional[RootPreviousVisasInstructions] = Field(
        None, title='Instructions'
    )
    previous_schengen_visa: Optional[RootPreviousVisasPreviousSchengenVisa] = Field(
        None, title='Previous Schengen Visas (if applicable)'
    )
    previous_visa_uploads: Optional[
        List[FieldGrpRootPreviousVisasPreviousVisaUploads]
    ] = Field(None, title='Group Builder')


class Org26894599Frm3746416Model(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    travel: Optional[RootTravel] = Field(None, title='Travel Details')
    appointment: Optional[RootAppointment] = Field(None, title='Appointment Details')
    passport: Optional[RootPassport] = Field(None, title='Passport')
    photograph: Optional[RootPhotograph] = Field(None, title='Photograph')
    residential_address: Optional[RootResidentialAddress] = Field(
        None, title='Residential Address'
    )
    ticketing: Optional[RootTicketing] = Field(None, title='Ticketing')
    itinerary_accomodation: Optional[RootItineraryAccomodation] = Field(
        None, title='Itinerary and Accomodation'
    )
    travel_insurance: Optional[RootTravelInsurance] = Field(
        None, title='Travel Insurance'
    )
    previous_visas: Optional[RootPreviousVisas] = Field(None, title='Previous Visas')
    additional_details: Optional[RootAdditionalDetails] = Field(
        None, title='Additional Travel Details'
    )
    salary_slip: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload salary slip pdf', title='Salary Slips'
    )
    bank_statement: Optional[RootBankStatement] = Field(None, title='Bank Statements')
    itr_acknowledgement: Optional[RootItrAcknowledgement] = Field(
        None, title='ITR Acknowledgement'
    )
    attachments_infopane: Optional[RootAttachmentsInfopane] = Field(
        None, title='Attachments'
    )
    declarations: Optional[RootDeclarations] = Field(None, title='Declarations')
    addons: Optional[RootAddons] = Field(None, title='Addons')
